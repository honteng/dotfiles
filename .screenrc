# encode
defutf8 on
defkanji utf-8
encoding utf-8 utf-8
defencoding utf-8

# set term
term xterm-color

# no start up message
startup_message off # key
escape ^z^z

# don't remove windows from the window list as soon as window process exits
zombie kr

# enable to scroll by mouse or keyboard
termcapinfo xterm* ti@:te@

# scroll buffer
defscrollback 10000
markkeys h=^B:l=^F:$=^E

# shortcut of screen with title option.
bind s colon 'screen -t '

# split and focus window
#bindkey ^x command -c emacs
#bind -c emacs 1 only
#bind -c emacs 2 split
#bind -c emacs 3 split -v
#bind -c emacs '^' colon 'resize +'
#bindkey ^/ focus

# list of all windows is displayed in the blank window for visual window selection.
bind w windowlist -b -m
bind ^w windowlist -b
windowlist title '%{u .c}Num Flags Title%=[0-9] select the number [movement] j,C-n:Down k,C-p:Up (C-)f:PageDown (C-)b:PageUp'
windowlist string '%{.c}%3n %f%09=%{dc} %t %='

# hardstatus and caption
hardstatus on
hardstatus alwayslastline '%{= .c}%H%{-} %L=%-w%45L>%{=u c.}%n %t%{-}%+w %-17<%=%m/%d %02c:%s'
caption always '%?%F%{= cw}%:%{= wk}%?%2n%f%07=%t%='
sorendition '+rb .c'

# default
chdir

# trigger for layout sub-commands
bind ^Y eval 'command -c layout' 'layout show'
bind y  eval 'command -c layout' 'layout show'

# create/remove layout
bind -c layout c eval 'layout new'    'layout show'
bind -c layout X eval 'layout remove' 'layout show'

# change the current layout title or number
bind -c layout A colon 'layout title '
bind -c layout N colon 'layout number '

# switch to the layout identified by number or title (not prefix of a title)
bind -c layout \' eval 'layout select' 'layout show'

# switch to other layout
bind -c layout n eval 'layout next'     'layout show'
bind -c layout p eval 'layout prev'     'layout show'
bind -c layout 0 eval 'layout select 0' 'layout show'
bind -c layout 1 eval 'layout select 1' 'layout show'
bind -c layout 2 eval 'layout select 2' 'layout show'
bind -c layout 3 eval 'layout select 3' 'layout show'
bind -c layout 4 eval 'layout select 4' 'layout show'
bind -c layout 5 eval 'layout select 5' 'layout show'
bind -c layout 6 eval 'layout select 6' 'layout show'
bind -c layout 7 eval 'layout select 7' 'layout show'
bind -c layout 8 eval 'layout select 8' 'layout show'
bind -c layout 9 eval 'layout select 9' 'layout show'

# continuous switch to other layout
bind -c layout ^N eval 'layout next' 'command -c layout' 'layout show'
bind -c layout ^P eval 'layout prev' 'command -c layout' 'layout show'

# create window
screen -t memo
screen -t vim
screen -t test
screen -t remote
screen -t console1
screen -t console2
screen -t console3
screen -t console4
screen -t console5
screen -t console6

# create layout
layout new 0:layout0:vertical
layout new 1:layout1:horizontal
layout new 2:dummy
layout new 3

# setup layout0
layout select 0
split -v
select 0
focus right
select 1

# setup layout1
layout select layout1:horizontal
select 0
split
split -v
focus right
select 1
focus down
split -v
select 2
focus right
select 3

# setup layout2
layout remove dummy
layout select 3
layout number 2
layout title single

select 2

# select layout0
layout select 0
layout show

bind ^h focus left
bind ^l focus right
bind ^k focus up
bind ^j focus down
#bind h focus left
#bind l focus right
#bind k focus up
#bind j focus down

# resize height
bind r resize 70



# copy the screen pastbuffer to the MacOSX pastebord
# bufferfile screen/screen-exchange
bindkey -m ' ' eval 'stuff \040' 'writebuf' 'exec sh -c "/usr/bin/pbcopy < /tmp/screen-exchange"'
bindkey -m Y   eval 'stuff Y'    'writebuf' 'exec sh -c "/usr/bin/pbcopy < /tmp/screen-exchange"'
bindkey -m W   eval 'stuff W'    'writebuf' 'exec sh -c "/usr/bin/pbcopy < /tmp/screen-exchange"'

vbell on

maptimeout 0
